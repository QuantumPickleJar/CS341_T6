<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="CookNook.AddRecipeIngredientsPage"
             NavigationPage.HasBackButton="False"

             Title="Add Recipe Ingredients">

    <Grid RowDefinitions="auto, *, *, auto, auto, auto" Padding="20, 20, 20, 20" BackgroundColor="{AppThemeBinding Light={StaticResource BackgroundColorLight}, Dark={StaticResource BackgroundColorDark}}">

        <Label Text="Ingredients" Margin="0, 0, 0, 20" FontSize="Large"/>

        <Frame Grid.Row="1" BorderColor="Black" HasShadow="True" Padding="10" BackgroundColor="{AppThemeBinding Light={StaticResource PostBackgroundColorLight}, Dark={StaticResource PostBackgroundColorDark}}">
            <ScrollView>
                <StackLayout Orientation="Vertical">
                    <!--TODO: use something that requires a DataTemplate since we have a Model defined it can build off of -->
                    <CollectionView x:Name="IngredientsView" 
                                    SelectionMode="Single"
                                    SelectionChanged="IngredientsView_SelectionChanged"
                                    ItemsSource="{Binding CurrentRecipe.Ingredients}"
                                    >
                        <CollectionView.ItemTemplate>
                            <DataTemplate>

                                <Grid ColumnDefinitions="*, auto, auto" Padding="0, 5, 0, 5">

                                    <Label Text="{Binding Name}" Grid.Column="0" VerticalTextAlignment="Center" FontSize="Body" TextColor="{AppThemeBinding Light={StaticResource PostTextColorLight}, Dark={StaticResource PostTextColorDark}}"/>

                                    <HorizontalStackLayout Grid.Column="1" Padding="0, 0, 20, 0">

                                        <Label Text="{Binding Quantity}" VerticalTextAlignment="Center" FontSize="Body" Padding="10, 0, 10, 0"/>

                                        <Label Text="{Binding Unit}" VerticalTextAlignment="Center" FontSize="Body">

                                        <!--Avoid need for value converter by using DataTriggers--> 
                                        <Label.Triggers>
                                        <!--If an ingredient has invalid fields, it shows as UNITLESS in red-->
                                            <DataTrigger TargetType="Label" 
                                                         Binding="{Binding Unit}" 
                                                         Value="UNITLESS">
                                                <Setter Property="TextColor" Value="Red"/>
                                            </DataTrigger>
                                        </Label.Triggers>

                                    </Label>

                                    </HorizontalStackLayout>

                                    <Button Text="X"
                                            FontSize="Medium"
                                            FontAttributes="Bold"
                                            Clicked="OnRemoveIngredient_Clicked"
                                            CommandParameter="{Binding .}"
                                            BackgroundColor="Transparent"
                                            Padding="0"
                                            BorderWidth="3"
                                            BorderColor="{AppThemeBinding Light={StaticResource ButtonBackgroundDark}, Dark={StaticResource ButtonBackgroundDark}}"
                                            TextColor="{AppThemeBinding Light={StaticResource ButtonBackgroundDark}, Dark={StaticResource ButtonBackgroundDark}}"
                                            Grid.Column="2"
                                            />

                                </Grid>

                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </StackLayout>
            </ScrollView>
        </Frame>

        <Grid RowDefinitions="*, auto, auto, *" Grid.Row="2" Padding="0, 20, 0, 0">

            <StackLayout Grid.Row="0">


                <Button x:Name="btnIngredientPicker" Text="Select Ingredient" Command="{Binding OpenPageCommand}"/>


            </StackLayout>

            <Grid ColumnDefinitions="auto, *, auto" Grid.Row="1">

                <Entry x:Name="QuantityEntry" Keyboard="Numeric" Placeholder="Qty" WidthRequest="100" Grid.Column="0"/>

                <Picker x:Name="UnitPicker" Title="Unit" TextColor="#ffe6a7" Grid.Column="2" WidthRequest="75">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>cups</x:String>
                            <x:String>oz</x:String>
                            <x:String>lbs</x:String>
                            <x:String>tbsps</x:String>
                            <x:String>tsps</x:String>
                            <x:String>grams</x:String>
                            <x:String>N/A</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

            </Grid>

            <StackLayout Grid.Row="2">

                <Button Grid.RowSpan="2" Text="Update Quantity" Clicked="SaveIngredientEdits_Clicked"/>
              
            </StackLayout>
        </Grid>

        <Grid ColumnDefinitions="auto, *" Grid.Row="6">

            <StackLayout Grid.Column="0" Padding="0, 0, 10, 0">
                <Button Text="Back" Clicked="BackClicked"/>
            </StackLayout>

            <StackLayout Grid.Column="1" Padding="10, 0, 0, 0">
                <Button Text="Next" Clicked="NextClicked"/>
            </StackLayout>
        </Grid>
    </Grid>

</ContentPage>